@model ForecastFavorLib.Models.CurrentWeatherResponse

@{
    ViewData["Title"] = "Current Weather";
}

<div class="container mt-5">
    <!-- Current Location -->
    <div class="current-location">
        <p>Current Location: Sudbury, Canada</p>
        <!-- Button to allow the user to fetch the latest weather data -->
        <button id="fetchWeatherButton" class="btn btn-success btn-lg mt-3 fetch-button">Fetch Weather</button>
        <!-- Button to trigger text-to-speech -->
        <button id="readWeatherButton" class="btn btn-info btn-lg mt-3">Read Weather Aloud</button>
    </div>

    <!-- Current Weather Card -->
    <div class="card border-primary mb-3 current-weather">
        <div class="card-body text-center">
            <!-- Display city and country in the card title -->
            <h3 class="card-title mb-4">@Model.Location.Name, @Model.Location.Country</h3>
            <!-- Weather Details on Left -->
            <div class="weather-details-left">
                <p class="card-text"><strong>Temperature:</strong> <i class="fas fa-temperature-low"></i> @Model.Current.TemperatureC °C (@Model.Current.TemperatureF °F)</p>
                <p class="card-text"><strong>Condition:</strong> <i class="fa fa-cloud"></i> @(Model.Current.Condition?.Text ?? "Not available")</p>
                <p class="card-text"><strong>Pressure:</strong> @Model.Current.PressureIn inches</p>
                <p class="card-text"><strong>Humidity:</strong> <i class="fa fa-droplet"></i> @Model.Current.Humidity %</p>
            </div>
            <!-- Weather Details on Right -->
            <div class="weather-details-right">
                <p class="card-text"><strong>Cloud Cover:</strong> <i class="fa fa-cloud"></i> @Model.Current.Cloud %</p>
                <p class="card-text"><strong>Feels Like:</strong>@Model.Current.FeelsLikeC °C</p>
                <p class="card-text"><strong>Wind Speed: </strong> <i class="fa fa-wind"></i> @Model.Current.WindKph kph</p>
            </div>
        </div>
    </div>


   

</div>

<script>
    document.getElementById("fetchWeatherButton").addEventListener("click", function () {
        // Send a request to the Index action method
        fetch("/Weather/Index")
            .then(response => {
                if (response.ok) {
                    // Handle a successful response
                } else {
                    // Handle error response
                }
            })
            .catch(error => {
                console.error("Error fetching weather data:", error);
            });
    });

    document.getElementById("readWeatherButton").addEventListener("click", function () {
        // Function to trigger text-to-speech
       var temperatureC = '@Model.Current.TemperatureC';
        var conditionText = '@(Model.Current.Condition?.Text ?? "not available")';

        var weatherText = `Current temperature is ${temperatureC} degrees Celsius. 
                        The weather condition is ${conditionText}.`;

        speak(weatherText);
    });

    function speak(text) {
    const speech = new SpeechSynthesisUtterance();
    speech.text = text;
    speech.lang = 'en-US'; // Set the language to English
    speech.pitch = 1;
    speech.rate = 1;
    window.speechSynthesis.speak(speech);
}

</script>
